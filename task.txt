Имеется проект AutoDiagnosis (https://github.com/iSosnitsky/AutoDiagnosis) - он полностью настроен, сам развернет базу данных H2 в памяти при старте.
В проекте нужно:
 1. Добавить в таблицу Pathologies (далее - Патологии)  целочисленное поле severity. 
 1. Поле может не иметь значения (nullable), возможные значения - от 0 до 10.
 2. В шаге (Step) loadPathologiesStep нужно реализовать заполнение этого поля. Поле заполняется случайным числом от 0 до 10
 2. Добавить в таблицу Patients булевое поле hospitalized булевого типа. Поле должно содержать значение (Not null), по умолчанию - false
 3. Реализовать TriageService.
 1. Реализовать метод triage. Логика работы метода:
 1. У всех пациентов в базе данных признак hospitalized  выставляется в false
 2. Из базы данных запрашиваются все пациенты (Patients)
 3. Полученные пациенты группируются по городу и сортируются по полю severity связанной возможной патологии 
 (probablePathology), если она есть. Если её нет - считать Severity как 0.
 4. 30% пациентов (Если что - округлить до самого большого числа) с самым высоким параметром Severity по городу 
 должны получить признак hospitalized = true. Этот признак нужно сохранить в базе данных
 5. Имена всех "Госпитализированных" пациентов - это возвращаемый параметр.
 2. Реализовать метод triageByCity. Логика аналогична методу triage, но метод принимает на вход строчный 
 параметр cityName`и применяет логику выставления флага `hospitalized к пациентам, связанным с городом с указанным названием.
 4. Реализовать REST-контроллер для доступа к обоим методам сервиса. В результате там должно 
 получиться два метода, оба должны выводить результат работы методов сервиса - имена пациентов.
 5. Если останется время - написать Unit-тест на сервис с использованием Mockito